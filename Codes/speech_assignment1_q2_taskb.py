# -*- coding: utf-8 -*-
"""Speech_Assignment1_Q2_TaskB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ubzqViRqTXGIhkdUPG4m02xISHxCksxm
"""

from google.colab import files

uploaded = files.upload()

import os

print(os.listdir("/content"))

audio_file_path = "/content/your_song.mp3"

import librosa
import librosa.display
import numpy as np
import matplotlib.pyplot as plt
import os
from scipy.signal import get_window

songs = {
    "Metal": "/content/Slaughter To Prevail - Baba Yaga (Official Music Video).mp3",
    "Rock": "/content/Numb (Official Music Video) [4K UPGRADE]  Linkin Park.mp3",
    "Pop": "/content/Sabrina Carpenter - Espresso (Official Video).mp3",
    "EDM": "/content/Martin Garrix - Forbidden Voices (Official Music Video).mp3",
}

# Parameters for STFT
n_fft = 4096  # FFT window size
hop_length = n_fft // 4  # 25% overlap for better resolution
window_type = "hamming"

def plot_spectrogram(y, sr, genre, title):
    window = get_window(window_type, n_fft)
    stft = librosa.stft(y, n_fft=n_fft, hop_length=hop_length, window=window)
    spectrogram = librosa.amplitude_to_db(np.abs(stft), ref=np.max)

    plt.figure(figsize=(10, 4))
    librosa.display.specshow(spectrogram, sr=sr, hop_length=hop_length, x_axis='time', y_axis='log')
    plt.colorbar(format='%+2.0f dB')
    plt.title(f"{title} ({genre})")
    plt.show()

for genre, file_path in songs.items():
    print(f"Processing: {genre}")
    y, sr = librosa.load(file_path, sr=22050)
    plot_spectrogram(y, sr, genre, "Spectrogram")

